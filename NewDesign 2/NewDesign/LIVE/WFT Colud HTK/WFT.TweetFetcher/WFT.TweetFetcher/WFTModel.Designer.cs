//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WFT.TweetFetcher
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class cgxwftcloudEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new cgxwftcloudEntities object using the connection string found in the 'cgxwftcloudEntities' section of the application configuration file.
        /// </summary>
        public cgxwftcloudEntities() : base("name=cgxwftcloudEntities", "cgxwftcloudEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cgxwftcloudEntities object.
        /// </summary>
        public cgxwftcloudEntities(string connectionString) : base(connectionString, "cgxwftcloudEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new cgxwftcloudEntities object.
        /// </summary>
        public cgxwftcloudEntities(EntityConnection connection) : base(connection, "cgxwftcloudEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialTweet> SocialTweets
        {
            get
            {
                if ((_SocialTweets == null))
                {
                    _SocialTweets = base.CreateObjectSet<SocialTweet>("SocialTweets");
                }
                return _SocialTweets;
            }
        }
        private ObjectSet<SocialTweet> _SocialTweets;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialTweets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialTweets(SocialTweet socialTweet)
        {
            base.AddObject("SocialTweets", socialTweet);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="exceptionClassName">No Metadata Documentation available.</param>
        /// <param name="exceptionMessage">No Metadata Documentation available.</param>
        /// <param name="exceptionStackTrace">No Metadata Documentation available.</param>
        /// <param name="exceptionDateTime">No Metadata Documentation available.</param>
        /// <param name="exceptionMethodName">No Metadata Documentation available.</param>
        public int InsertExceptionLog(global::System.String exceptionClassName, global::System.String exceptionMessage, global::System.String exceptionStackTrace, Nullable<global::System.DateTime> exceptionDateTime, global::System.String exceptionMethodName)
        {
            ObjectParameter exceptionClassNameParameter;
            if (exceptionClassName != null)
            {
                exceptionClassNameParameter = new ObjectParameter("ExceptionClassName", exceptionClassName);
            }
            else
            {
                exceptionClassNameParameter = new ObjectParameter("ExceptionClassName", typeof(global::System.String));
            }
    
            ObjectParameter exceptionMessageParameter;
            if (exceptionMessage != null)
            {
                exceptionMessageParameter = new ObjectParameter("ExceptionMessage", exceptionMessage);
            }
            else
            {
                exceptionMessageParameter = new ObjectParameter("ExceptionMessage", typeof(global::System.String));
            }
    
            ObjectParameter exceptionStackTraceParameter;
            if (exceptionStackTrace != null)
            {
                exceptionStackTraceParameter = new ObjectParameter("ExceptionStackTrace", exceptionStackTrace);
            }
            else
            {
                exceptionStackTraceParameter = new ObjectParameter("ExceptionStackTrace", typeof(global::System.String));
            }
    
            ObjectParameter exceptionDateTimeParameter;
            if (exceptionDateTime.HasValue)
            {
                exceptionDateTimeParameter = new ObjectParameter("ExceptionDateTime", exceptionDateTime);
            }
            else
            {
                exceptionDateTimeParameter = new ObjectParameter("ExceptionDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter exceptionMethodNameParameter;
            if (exceptionMethodName != null)
            {
                exceptionMethodNameParameter = new ObjectParameter("ExceptionMethodName", exceptionMethodName);
            }
            else
            {
                exceptionMethodNameParameter = new ObjectParameter("ExceptionMethodName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertExceptionLog", exceptionClassNameParameter, exceptionMessageParameter, exceptionStackTraceParameter, exceptionDateTimeParameter, exceptionMethodNameParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="cgxwftcloudModel", Name="SocialTweet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialTweet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialTweet object.
        /// </summary>
        /// <param name="tweetID">Initial value of the tweetID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="tweetPlainText">Initial value of the tweetPlainText property.</param>
        /// <param name="tweetHTMLText">Initial value of the tweetHTMLText property.</param>
        public static SocialTweet CreateSocialTweet(global::System.Int64 tweetID, global::System.DateTime createdDate, global::System.String tweetPlainText, global::System.String tweetHTMLText)
        {
            SocialTweet socialTweet = new SocialTweet();
            socialTweet.tweetID = tweetID;
            socialTweet.CreatedDate = createdDate;
            socialTweet.tweetPlainText = tweetPlainText;
            socialTweet.tweetHTMLText = tweetHTMLText;
            return socialTweet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 tweetID
        {
            get
            {
                return _tweetID;
            }
            set
            {
                if (_tweetID != value)
                {
                    OntweetIDChanging(value);
                    ReportPropertyChanging("tweetID");
                    _tweetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("tweetID");
                    OntweetIDChanged();
                }
            }
        }
        private global::System.Int64 _tweetID;
        partial void OntweetIDChanging(global::System.Int64 value);
        partial void OntweetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tweetPlainText
        {
            get
            {
                return _tweetPlainText;
            }
            set
            {
                OntweetPlainTextChanging(value);
                ReportPropertyChanging("tweetPlainText");
                _tweetPlainText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tweetPlainText");
                OntweetPlainTextChanged();
            }
        }
        private global::System.String _tweetPlainText;
        partial void OntweetPlainTextChanging(global::System.String value);
        partial void OntweetPlainTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tweetHTMLText
        {
            get
            {
                return _tweetHTMLText;
            }
            set
            {
                OntweetHTMLTextChanging(value);
                ReportPropertyChanging("tweetHTMLText");
                _tweetHTMLText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tweetHTMLText");
                OntweetHTMLTextChanged();
            }
        }
        private global::System.String _tweetHTMLText;
        partial void OntweetHTMLTextChanging(global::System.String value);
        partial void OntweetHTMLTextChanged();

        #endregion

    
    }

    #endregion

    
}
